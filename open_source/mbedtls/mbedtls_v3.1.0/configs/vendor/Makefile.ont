SHARED=1
CFLAGS	?= -O2
WARNING_CFLAGS ?=  -Wall -Wextra -Wformat=2 -Wno-format-nonliteral
LDFLAGS ?=

LOCAL_CFLAGS = $(WARNING_CFLAGS) -I. -I../include -D_FILE_OFFSET_BITS=64
LOCAL_CFLAGS += -I../include -I$(HW_ONT_INFECTED_ROOT)/basic/inc
LOCAL_LDFLAGS =

ifdef DEBUG
LOCAL_CFLAGS += -g3
endif

ifdef SHARED
LOCAL_CFLAGS += -fPIC -fpic
endif

SOEXT_TLS=so.17
SOEXT_X509=so.4
SOEXT_CRYPTO=so.11

# crypto
OBJS_CRYPTO = aes.o	aesni.o	aria.o	asn1parse.o	asn1write.o	\
		base64.o	bignum.o	blowfish.o	camellia.o	ccm.o	chacha20.o	\
		chachapoly.o	cipher.o	cipher_wrap.o	cmac.o	\
		constant_time.o	ctr_drbg.o	des.o	dhm.o	ecdh.o	ecdsa.o	\
		ecjpake.o	ecp.o	ecp_curves.o	entropy.o	entropy_poll.o	\
		error.o	gcm.o	hkdf.o	hmac_drbg.o	md.o	md2.o	md4.o	md5.o	\
		memory_buffer_alloc.o	mps_reader.o	mps_trace.o	nist_kw.o	\
		oid.o	padlock.o	pem.o	pk.o	pk_wrap.o	pkcs12.o	\
		pkcs5.o	pkparse.o	pkwrite.o	platform.o	platform_util.o	poly1305.o	\
		ripemd160.o	rsa_alt_helpers.o	rsa.o	sha1.o	sha256.o	sha512.o	\
		ssl_debug_helpers_generated.o	threading.o	timing.o	version.o	\
		version_features.o hw_polarssl_api.o hw_mbedtls_config.o

# 3rdparty
include ../3rdparty/Makefile.inc
LOCAL_CFLAGS += $(THIRDPARTY_INCLUDES)
OBJS_CRYPTO += $(THIRDPARTY_CRYPTO_OBJECTS)

# x509 certs
OBJS_CRYPTO += x509.o	x509_create.o	x509_crl.o	x509_crt.o	\
		x509_csr.o	x509write_crt.o	x509write_csr.o

# tls api
OBJS_CRYPTO += debug.o	net_sockets.o	ssl_cache.o	ssl_ciphersuites.o	\
		ssl_cli.o	ssl_cookie.o	ssl_msg.o	ssl_srv.o	ssl_ticket.o	\
		ssl_tls.o	ssl_tls13_keys.o	ssl_tls13_client.o	\
		ssl_tls13_server.o	ssl_tls13_generic.o	\

# aes file
ifdef MBED_AESCRYPT
OBJS_CRYPTO += hw_aescrypt2.o
endif

.SILENT:

.PHONY: all clean

all: libpolarssl.so

libpolarssl.so:  $(OBJS_CRYPTO)
	echo "  LD    $@"
	$(CC) -shared -Wl,-soname,$@  $(LOCAL_LDFLAGS) $(LDFLAGS) -o $@ $(OBJS_CRYPTO)

.c.o:
	echo "  CC    $<"
	$(CC) $(LOCAL_CFLAGS) $(CFLAGS) -o $@ -c $<

clean:
	rm -f *.o libmbed* libpolarssl.so
