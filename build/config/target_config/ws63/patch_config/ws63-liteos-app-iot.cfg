[Patch Info]
Device_Code_Version = Version1

Patch_Cpu_Core = APPLICATION

Patch_File_Address  = 0x00000000

# patch_remap table 在bin文件中的偏移地址
Patch_TBL_Address   = 0x00000400

# patch_remap table 实际的运行地址, 必须 1K 对齐
Patch_TBL_Run_Address  = 0x0014c000

# 如果这里配置为 4, 那 remap table 里只能存短跳指令, Patch_TBL_Run_Address 和 patch 函数地址间隔不能超过 1M
# 如果这里配置为 8, 1. init 时需要将 off_region 配置为 true; 2. 对 patch 函数地址则没有限制;
Table_Max_Size         = 8
Table_Reg_Size         = 8

# patch 数量 = 指令 patch 的数量(192) + 数据 patch 的数量(2)
# 注意: drivers\chips\ws63\arch\riscv\riscv31\flash_patch.h 中的 RISCV31_PATCH_CMP_REG_NUM 宏单指 指令 patch 的数量
#       main.c 中的 PATCH_NUM 宏指 指令 patch + 数据 patch 的数量
TABLE_REG_CONUT        = 194

[ROM Info]
ROM_Address        = 0x00109000
ROM_Size           = 0x00043000

[Output Info]
CMP_Bin_File        = cmp.bin
TBL_Bin_File        = tbl.bin
RW_Bin_File         = patch.bin

[Function]
####start platform patch
uapi_watchdog_enable uapi_watchdog_enable_patch
uapi_watchdog_kick uapi_watchdog_kick_patch
hal_sfc_v150_reg_write hal_sfc_v150_reg_write_patch
hal_sfc_v150_get_flash_id hal_sfc_v150_get_flash_id_patch
uapi_sfc_reg_read uapi_sfc_reg_read_patch
uapi_sfc_dma_read uapi_sfc_dma_read_patch
do_greedy_erase do_greedy_erase_patch
uapi_sfc_reg_write uapi_sfc_reg_write_patch
####end   platform patch

####start wifi patch
dmac_psm_process_tim_elm dmac_psm_process_tim_elm_patch
dmac_psm_tx_complete_sta dmac_psm_tx_complete_sta_patch
dmac_psm_max_powersave_enable dmac_psm_max_powersave_enable_patch
dmac_scan_channel_statistics_complete_continue dmac_scan_channel_statistics_complete_continue_patch
dmac_get_data_type_from_8023_etc dmac_get_data_type_from_8023_etc_patch
dmac_rx_prepare_data dmac_rx_prepare_data_patch
frw_thread_process_msg frw_thread_process_msg_patch
dmac_mac_error_handle dmac_mac_error_handle_patch
dmac_mac_error_process_event dmac_mac_error_process_event_patch
hh503_dispatch_trig_event_encap hh503_dispatch_trig_event_encap_patch
hh503_rx_alloc_netbuf_and_dscr hh503_rx_alloc_netbuf_and_dscr_patch
hal_rx_add_dscr hal_rx_add_dscr_patch
hal_rx_pre_add_dscr hal_rx_pre_add_dscr_patch
hal_get_tx_q_status_empty hal_get_tx_q_status_empty_patch
dmac_latency_trace_init_proc dmac_latency_trace_init_proc_patch
dmac_latency_stats_init_proc dmac_latency_stats_init_proc_patch
hal_gp_get_mpdu_count hal_gp_get_mpdu_count_patch
hal_get_tx_dscr_pn_msb hal_get_tx_dscr_pn_msb_patch
dmac_tx_complete_ampdu_buffer dmac_tx_complete_ampdu_buffer_patch
dmac_mgmt_switch_channel dmac_mgmt_switch_channel_patch
hal_set_mac_clken hal_set_mac_clken_patch
hh503_clear_rx_pn hh503_clear_rx_pn_patch
hh503_enable_ce hh503_enable_ce_patch
dmac_tx_get_txop_alg dmac_tx_get_txop_alg_patch
dmac_tx_get_baw_remain_num dmac_tx_get_baw_remain_num_patch
alg_tpc_tx_query_vap_special alg_tpc_tx_query_vap_special_patch
dmac_config_tx_addba_rsp_lut_proc dmac_config_tx_addba_rsp_lut_proc_patch
alg_ar_get_phy_protocol_by_rate_info alg_ar_get_phy_protocol_by_rate_info_patch
frw_free_msg_node frw_free_msg_node_patch
hh503_pow_set_user_resp_frm_phy_tx_mode hh503_pow_set_user_resp_frm_phy_tx_mode_patch
hal_device_handle_idle_vap_down hal_device_handle_idle_vap_down_patch
hal_recover_machw_phy_and_pa hal_recover_machw_phy_and_pa_patch
####end   wifi patch

####start btc patch
evt_task_ble_acl_refresh_next_peripheral_time evt_task_ble_acl_refresh_next_peripheral_time_patch
evt_task_ble_adv_set_intv evt_task_ble_adv_set_intv_patch
evt_task_ble_acl_process_rx_content_isr evt_task_ble_acl_process_rx_content_isr_patch
####end   btc patch
